#include <iostream>
#include <openssl/aes.h>
#pragma comment(lib, "libcrypto.lib")
uint32_t des_skb[256]{
			0x36CD0670, 0x84DB6435, 0x89A4CD0E, 0x8A6BBD4B,
			0x8C15E27C, 0x011DE071, 0x00E02A3A, 0xC3FF3F27,
			0xA9CCDBC8, 0x189BEEED, 0xC9AE62A6, 0x287E0943,
			0x315D3E54, 0xA59E0BA9, 0x6769E252, 0x485C379F,
			0xB37B9620, 0xF3DAF2A5, 0x6D94553E, 0x41D2263B,
			0xB6B1AF2C, 0x11339FE1, 0x0382A76A, 0x03387117,
			0x732A9578, 0xA8AF4F5D, 0x1B4904D6, 0x0DA3F433,
			0x0FBE9504, 0x63B77D19, 0x47E6D982, 0x53C1CB8F,
			0x6C3F39D0, 0x0D93E515, 0x5EB2D16E, 0x10F3532B,
			0xC5034FDC, 0xF5268351, 0x5006D89A, 0xB4AA2707,
			0xBBB2E328, 0x48E793CD, 0xE32C1B06, 0x3E042323,
			0x91533FB4, 0x69219289, 0x418704B2, 0xA3A7637F,
			0x9D92F180, 0x6C6D3B85, 0x7D03419E, 0x23DE441B,
			0x4F55C48C, 0x526D8AC1, 0x7DBFBDCA, 0x98F360F7,
			0x4280C4D8, 0xA0CBBC3D, 0x02FAA536, 0x2DCD9613,
			0x37063E64, 0x66734BF9, 0xA33D63E2, 0x0ECBFF6F,
			0xF531BD30, 0xE10DF5F5, 0xF7C8A5CE, 0xF2E1F90B,
			0x6B340D3C, 0x40BFB631, 0x5F4056FA, 0x98F31EE7,
			0x8FEF3A88, 0x4622C8AD, 0x0397A366, 0x956F4D03,
			0xD7029114, 0xB683A969, 0x0F3CF712, 0x0C2E9F5F,
			0x42169CE0, 0xE25D1465, 0x3D85FDFE, 0x328D71FB,
			0x5B6929EC, 0xBA1405A1, 0x325BA42A, 0xB5C860D7,
			0xA5994438, 0x2CF3B91D, 0x45261596, 0x619847F3,
			0x4CB337C4, 0xCE69AAD9, 0xAAF8BE42, 0xA30E434F,
			0x247C9090, 0xFD8196D5, 0x2BFE4A2E, 0xC3AFAEEB,
			0x40001A9C, 0x0AA17911, 0xD024A55A, 0xF8D226C7,
			0xAE59E1E8, 0x17858D8D, 0x2F08FBC6, 0xA33786E3,
			0x28C33274, 0xAD7C5049, 0x4F23B972, 0x5AE9EB3F,
			0xBDDE9840, 0x45E27D45, 0x40348A5E, 0xA357AFDB,
			0xC643DF4C, 0x40DF1081, 0xDCEE5A8A, 0x63AF70B7,
			0xAE4C1398, 0x065F45FD, 0x5FE355F6, 0x7F7C09D3,
			0x611D8124, 0x4D5299B9, 0xB7B0E8A2, 0x2B80972F,
			0x60F7B3F0, 0xC526C7B5, 0xC66BBE8E, 0xDAD474CB,
			0xD8BF77FC, 0x9D83CBF1, 0xF84BC3BA, 0xE03F3EA7,
			0x32CAD948, 0xA847E26D, 0xDD982426, 0x1FD4D0C3,
			0x00ED23D4, 0x11C38729, 0xB3D34BD2, 0x6CD1471F,
			0x41C2E3A0, 0xEB357625, 0x0A26E6BE, 0x6FB4FDBB,
			0x4F3DE4AC, 0x0386AB61, 0xED0FE0EA, 0x30A09097,
			0x027132F8, 0xCA4662DD, 0x454A6656, 0xA1F0DBB3,
			0xD89D1A84, 0x38E61899, 0x55FDE302, 0xC71AFB0F,
			0x257B2750, 0xFE358895, 0x862902EE, 0x53C84AAB,
			0x9ECA255C, 0x681EAED1, 0xE14DB21A, 0xDF326687,
			0xCD1A20A8, 0xC7A1C74D, 0xFB5D1C86, 0x07BF2AA3,
			0x2DD86534, 0x4B114E09, 0x23E3AE32, 0x22DCB2FF,
			0x129B7F00, 0x8A8DFF05, 0x1475131E, 0x551D5B9B,
			0x89AF3A0C, 0x42C2D641, 0x8658374A, 0x2E93C077,
			0xDBE0A258, 0xF9E10FBD, 0x5B7346B6, 0x276EBD93,
			0x6B8A03E4, 0x8ADC2779, 0x4677AD62, 0x98D56EEF,
			0x00DEEAB0, 0xD2E5D975, 0x1E4E174E, 0x0E03308B,
			0xCF7822BC, 0xFD2A21B1, 0x48C2707A, 0x09A39E67,
			0xC11FB808, 0x28CB3C2D, 0xE86FE4E6, 0x9B6E9483,
			0xD1DCF694, 0x651DA4E9, 0xB9ECE092, 0x62042EDF,
			0x89406A60, 0x402417E5, 0xCC370F7E, 0xD508C97B,
			0xDCEFDF6C, 0x634B9121, 0x805F5DAA, 0xF3810057,
			0x087261B8, 0xFA674C9D, 0x7C75F716, 0xB26DAF73,
			0x263C3D44, 0xE0ECC659, 0x7DB647C2, 0xC7A7F2CF,
			0x95FAFE10, 0xD16FBA55, 0x35F2FBAE, 0xACFD266B,
			0x7C21701C, 0x135E2491, 0xA041FEDA, 0xF78AE647,
			0xE6B39F68, 0x62FC410D, 0x78E87D46, 0x5F5B0E63,
			0x6352D7F4, 0x0FA08BC9, 0xC486E2F2, 0x133FBABF,
			0x1289A5C0, 0x8C2FC0C5, 0x9284DBDE, 0x34EF475B,
			0x8457D4CC, 0xEDD8DC01, 0x66BD540A, 0x99605037,
			0xE9FE7118, 0x1511197D, 0xF66A7776, 0x2965B153,
			0x690BC6A4, 0x7CCFF539, 0x2451B222, 0x7E8A86AF
};
int main()
{
	AES_KEY key = { 0 };
	if (AES_set_encrypt_key(reinterpret_cast<const unsigned char *>(des_skb), 256, &key) == 0)
	{
		const unsigned char lpszsrc[260] = "123456";
		unsigned char lpszBuffer[260] = { 0 };

		AES_encrypt(lpszsrc, lpszBuffer, &key);
		AES_set_encrypt_key(reinterpret_cast<const unsigned char *>(des_skb), 256, &key);
		AES_decrypt(lpszBuffer, lpszBuffer, &key);
	}
    std::cout << "b8 55 07 26 1e 46 26 89 2e 11 32 81 0a 2b af 2e Hello World!\n"; 
}