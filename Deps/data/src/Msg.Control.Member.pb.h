// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg.Control.Member.proto

#ifndef PROTOBUF_INCLUDED_Msg_2eControl_2eMember_2eproto
#define PROTOBUF_INCLUDED_Msg_2eControl_2eMember_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Msg.Control.Define.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Msg_2eControl_2eMember_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_Msg_2eControl_2eMember_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_Msg_2eControl_2eMember_2eproto();
namespace Cry {
namespace Control {
namespace Member {
class MsgChangeBindRequest;
class MsgChangeBindRequestDefaultTypeInternal;
extern MsgChangeBindRequestDefaultTypeInternal _MsgChangeBindRequest_default_instance_;
class MsgChangeBindResponse;
class MsgChangeBindResponseDefaultTypeInternal;
extern MsgChangeBindResponseDefaultTypeInternal _MsgChangeBindResponse_default_instance_;
class MsgChangePassRequest;
class MsgChangePassRequestDefaultTypeInternal;
extern MsgChangePassRequestDefaultTypeInternal _MsgChangePassRequest_default_instance_;
class MsgChangePassResponse;
class MsgChangePassResponseDefaultTypeInternal;
extern MsgChangePassResponseDefaultTypeInternal _MsgChangePassResponse_default_instance_;
class MsgRegisterRequest;
class MsgRegisterRequestDefaultTypeInternal;
extern MsgRegisterRequestDefaultTypeInternal _MsgRegisterRequest_default_instance_;
class MsgRegisterResponse;
class MsgRegisterResponseDefaultTypeInternal;
extern MsgRegisterResponseDefaultTypeInternal _MsgRegisterResponse_default_instance_;
class MsgSignInRequest;
class MsgSignInRequestDefaultTypeInternal;
extern MsgSignInRequestDefaultTypeInternal _MsgSignInRequest_default_instance_;
class MsgSignInResponse;
class MsgSignInResponseDefaultTypeInternal;
extern MsgSignInResponseDefaultTypeInternal _MsgSignInResponse_default_instance_;
}  // namespace Member
}  // namespace Control
}  // namespace Cry
namespace google {
namespace protobuf {
template<> ::Cry::Control::Member::MsgChangeBindRequest* Arena::CreateMaybeMessage<::Cry::Control::Member::MsgChangeBindRequest>(Arena*);
template<> ::Cry::Control::Member::MsgChangeBindResponse* Arena::CreateMaybeMessage<::Cry::Control::Member::MsgChangeBindResponse>(Arena*);
template<> ::Cry::Control::Member::MsgChangePassRequest* Arena::CreateMaybeMessage<::Cry::Control::Member::MsgChangePassRequest>(Arena*);
template<> ::Cry::Control::Member::MsgChangePassResponse* Arena::CreateMaybeMessage<::Cry::Control::Member::MsgChangePassResponse>(Arena*);
template<> ::Cry::Control::Member::MsgRegisterRequest* Arena::CreateMaybeMessage<::Cry::Control::Member::MsgRegisterRequest>(Arena*);
template<> ::Cry::Control::Member::MsgRegisterResponse* Arena::CreateMaybeMessage<::Cry::Control::Member::MsgRegisterResponse>(Arena*);
template<> ::Cry::Control::Member::MsgSignInRequest* Arena::CreateMaybeMessage<::Cry::Control::Member::MsgSignInRequest>(Arena*);
template<> ::Cry::Control::Member::MsgSignInResponse* Arena::CreateMaybeMessage<::Cry::Control::Member::MsgSignInResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Cry {
namespace Control {
namespace Member {

// ===================================================================

class MsgRegisterRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cry.Control.Member.MsgRegisterRequest) */ {
 public:
  MsgRegisterRequest();
  virtual ~MsgRegisterRequest();

  MsgRegisterRequest(const MsgRegisterRequest& from);

  inline MsgRegisterRequest& operator=(const MsgRegisterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgRegisterRequest(MsgRegisterRequest&& from) noexcept
    : MsgRegisterRequest() {
    *this = ::std::move(from);
  }

  inline MsgRegisterRequest& operator=(MsgRegisterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MsgRegisterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgRegisterRequest* internal_default_instance() {
    return reinterpret_cast<const MsgRegisterRequest*>(
               &_MsgRegisterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgRegisterRequest* other);
  friend void swap(MsgRegisterRequest& a, MsgRegisterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgRegisterRequest* New() const final {
    return CreateMaybeMessage<MsgRegisterRequest>(nullptr);
  }

  MsgRegisterRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgRegisterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgRegisterRequest& from);
  void MergeFrom(const MsgRegisterRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRegisterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const void* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // bytes password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const void* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // bytes email = 3;
  void clear_email();
  static const int kEmailFieldNumber = 3;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const void* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // bytes phone = 4;
  void clear_phone();
  static const int kPhoneFieldNumber = 4;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const void* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // uint32 pin = 5;
  void clear_pin();
  static const int kPinFieldNumber = 5;
  ::google::protobuf::uint32 pin() const;
  void set_pin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cry.Control.Member.MsgRegisterRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  ::google::protobuf::uint32 pin_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_2eControl_2eMember_2eproto;
};
// -------------------------------------------------------------------

class MsgRegisterResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cry.Control.Member.MsgRegisterResponse) */ {
 public:
  MsgRegisterResponse();
  virtual ~MsgRegisterResponse();

  MsgRegisterResponse(const MsgRegisterResponse& from);

  inline MsgRegisterResponse& operator=(const MsgRegisterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgRegisterResponse(MsgRegisterResponse&& from) noexcept
    : MsgRegisterResponse() {
    *this = ::std::move(from);
  }

  inline MsgRegisterResponse& operator=(MsgRegisterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MsgRegisterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgRegisterResponse* internal_default_instance() {
    return reinterpret_cast<const MsgRegisterResponse*>(
               &_MsgRegisterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MsgRegisterResponse* other);
  friend void swap(MsgRegisterResponse& a, MsgRegisterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgRegisterResponse* New() const final {
    return CreateMaybeMessage<MsgRegisterResponse>(nullptr);
  }

  MsgRegisterResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgRegisterResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgRegisterResponse& from);
  void MergeFrom(const MsgRegisterResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRegisterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // .Cry.Control.Define.Write msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  ::Cry::Control::Define::Write msg() const;
  void set_msg(::Cry::Control::Define::Write value);

  // uint32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cry.Control.Member.MsgRegisterResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  int msg_;
  ::google::protobuf::uint32 uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_2eControl_2eMember_2eproto;
};
// -------------------------------------------------------------------

class MsgSignInRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cry.Control.Member.MsgSignInRequest) */ {
 public:
  MsgSignInRequest();
  virtual ~MsgSignInRequest();

  MsgSignInRequest(const MsgSignInRequest& from);

  inline MsgSignInRequest& operator=(const MsgSignInRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSignInRequest(MsgSignInRequest&& from) noexcept
    : MsgSignInRequest() {
    *this = ::std::move(from);
  }

  inline MsgSignInRequest& operator=(MsgSignInRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MsgSignInRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSignInRequest* internal_default_instance() {
    return reinterpret_cast<const MsgSignInRequest*>(
               &_MsgSignInRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MsgSignInRequest* other);
  friend void swap(MsgSignInRequest& a, MsgSignInRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSignInRequest* New() const final {
    return CreateMaybeMessage<MsgSignInRequest>(nullptr);
  }

  MsgSignInRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSignInRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSignInRequest& from);
  void MergeFrom(const MsgSignInRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSignInRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const void* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // bytes password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const void* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // uint32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cry.Control.Member.MsgSignInRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::uint32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_2eControl_2eMember_2eproto;
};
// -------------------------------------------------------------------

class MsgSignInResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cry.Control.Member.MsgSignInResponse) */ {
 public:
  MsgSignInResponse();
  virtual ~MsgSignInResponse();

  MsgSignInResponse(const MsgSignInResponse& from);

  inline MsgSignInResponse& operator=(const MsgSignInResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSignInResponse(MsgSignInResponse&& from) noexcept
    : MsgSignInResponse() {
    *this = ::std::move(from);
  }

  inline MsgSignInResponse& operator=(MsgSignInResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MsgSignInResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSignInResponse* internal_default_instance() {
    return reinterpret_cast<const MsgSignInResponse*>(
               &_MsgSignInResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MsgSignInResponse* other);
  friend void swap(MsgSignInResponse& a, MsgSignInResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSignInResponse* New() const final {
    return CreateMaybeMessage<MsgSignInResponse>(nullptr);
  }

  MsgSignInResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSignInResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSignInResponse& from);
  void MergeFrom(const MsgSignInResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSignInResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // .Cry.Control.Define.SignIn msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  ::Cry::Control::Define::SignIn msg() const;
  void set_msg(::Cry::Control::Define::SignIn value);

  // uint32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 expires = 4;
  void clear_expires();
  static const int kExpiresFieldNumber = 4;
  ::google::protobuf::uint32 expires() const;
  void set_expires(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cry.Control.Member.MsgSignInResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  int msg_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 expires_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_2eControl_2eMember_2eproto;
};
// -------------------------------------------------------------------

class MsgChangePassRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cry.Control.Member.MsgChangePassRequest) */ {
 public:
  MsgChangePassRequest();
  virtual ~MsgChangePassRequest();

  MsgChangePassRequest(const MsgChangePassRequest& from);

  inline MsgChangePassRequest& operator=(const MsgChangePassRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgChangePassRequest(MsgChangePassRequest&& from) noexcept
    : MsgChangePassRequest() {
    *this = ::std::move(from);
  }

  inline MsgChangePassRequest& operator=(MsgChangePassRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MsgChangePassRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgChangePassRequest* internal_default_instance() {
    return reinterpret_cast<const MsgChangePassRequest*>(
               &_MsgChangePassRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MsgChangePassRequest* other);
  friend void swap(MsgChangePassRequest& a, MsgChangePassRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgChangePassRequest* New() const final {
    return CreateMaybeMessage<MsgChangePassRequest>(nullptr);
  }

  MsgChangePassRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgChangePassRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgChangePassRequest& from);
  void MergeFrom(const MsgChangePassRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgChangePassRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const void* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // bytes password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const void* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // bytes newspass = 3;
  void clear_newspass();
  static const int kNewspassFieldNumber = 3;
  const ::std::string& newspass() const;
  void set_newspass(const ::std::string& value);
  #if LANG_CXX11
  void set_newspass(::std::string&& value);
  #endif
  void set_newspass(const char* value);
  void set_newspass(const void* value, size_t size);
  ::std::string* mutable_newspass();
  ::std::string* release_newspass();
  void set_allocated_newspass(::std::string* newspass);

  // uint32 pin = 4;
  void clear_pin();
  static const int kPinFieldNumber = 4;
  ::google::protobuf::uint32 pin() const;
  void set_pin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cry.Control.Member.MsgChangePassRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr newspass_;
  ::google::protobuf::uint32 pin_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_2eControl_2eMember_2eproto;
};
// -------------------------------------------------------------------

class MsgChangePassResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cry.Control.Member.MsgChangePassResponse) */ {
 public:
  MsgChangePassResponse();
  virtual ~MsgChangePassResponse();

  MsgChangePassResponse(const MsgChangePassResponse& from);

  inline MsgChangePassResponse& operator=(const MsgChangePassResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgChangePassResponse(MsgChangePassResponse&& from) noexcept
    : MsgChangePassResponse() {
    *this = ::std::move(from);
  }

  inline MsgChangePassResponse& operator=(MsgChangePassResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MsgChangePassResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgChangePassResponse* internal_default_instance() {
    return reinterpret_cast<const MsgChangePassResponse*>(
               &_MsgChangePassResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(MsgChangePassResponse* other);
  friend void swap(MsgChangePassResponse& a, MsgChangePassResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgChangePassResponse* New() const final {
    return CreateMaybeMessage<MsgChangePassResponse>(nullptr);
  }

  MsgChangePassResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgChangePassResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgChangePassResponse& from);
  void MergeFrom(const MsgChangePassResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgChangePassResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // .Cry.Control.Define.ChangePass msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  ::Cry::Control::Define::ChangePass msg() const;
  void set_msg(::Cry::Control::Define::ChangePass value);

  // uint32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cry.Control.Member.MsgChangePassResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  int msg_;
  ::google::protobuf::uint32 uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_2eControl_2eMember_2eproto;
};
// -------------------------------------------------------------------

class MsgChangeBindRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cry.Control.Member.MsgChangeBindRequest) */ {
 public:
  MsgChangeBindRequest();
  virtual ~MsgChangeBindRequest();

  MsgChangeBindRequest(const MsgChangeBindRequest& from);

  inline MsgChangeBindRequest& operator=(const MsgChangeBindRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgChangeBindRequest(MsgChangeBindRequest&& from) noexcept
    : MsgChangeBindRequest() {
    *this = ::std::move(from);
  }

  inline MsgChangeBindRequest& operator=(MsgChangeBindRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MsgChangeBindRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgChangeBindRequest* internal_default_instance() {
    return reinterpret_cast<const MsgChangeBindRequest*>(
               &_MsgChangeBindRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(MsgChangeBindRequest* other);
  friend void swap(MsgChangeBindRequest& a, MsgChangeBindRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgChangeBindRequest* New() const final {
    return CreateMaybeMessage<MsgChangeBindRequest>(nullptr);
  }

  MsgChangeBindRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgChangeBindRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgChangeBindRequest& from);
  void MergeFrom(const MsgChangeBindRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgChangeBindRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const void* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // bytes password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const void* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // uint32 secret = 3;
  void clear_secret();
  static const int kSecretFieldNumber = 3;
  ::google::protobuf::uint32 secret() const;
  void set_secret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cry.Control.Member.MsgChangeBindRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::uint32 secret_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_2eControl_2eMember_2eproto;
};
// -------------------------------------------------------------------

class MsgChangeBindResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cry.Control.Member.MsgChangeBindResponse) */ {
 public:
  MsgChangeBindResponse();
  virtual ~MsgChangeBindResponse();

  MsgChangeBindResponse(const MsgChangeBindResponse& from);

  inline MsgChangeBindResponse& operator=(const MsgChangeBindResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgChangeBindResponse(MsgChangeBindResponse&& from) noexcept
    : MsgChangeBindResponse() {
    *this = ::std::move(from);
  }

  inline MsgChangeBindResponse& operator=(MsgChangeBindResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MsgChangeBindResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgChangeBindResponse* internal_default_instance() {
    return reinterpret_cast<const MsgChangeBindResponse*>(
               &_MsgChangeBindResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(MsgChangeBindResponse* other);
  friend void swap(MsgChangeBindResponse& a, MsgChangeBindResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgChangeBindResponse* New() const final {
    return CreateMaybeMessage<MsgChangeBindResponse>(nullptr);
  }

  MsgChangeBindResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgChangeBindResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgChangeBindResponse& from);
  void MergeFrom(const MsgChangeBindResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgChangeBindResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes text = 2;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // .Cry.Control.Define.ChangeBind msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  ::Cry::Control::Define::ChangeBind msg() const;
  void set_msg(::Cry::Control::Define::ChangeBind value);

  // uint32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cry.Control.Member.MsgChangeBindResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  int msg_;
  ::google::protobuf::uint32 uid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Msg_2eControl_2eMember_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgRegisterRequest

// bytes username = 1;
inline void MsgRegisterRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRegisterRequest::username() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgRegisterRequest.username)
  return username_.GetNoArena();
}
inline void MsgRegisterRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgRegisterRequest.username)
}
#if LANG_CXX11
inline void MsgRegisterRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Cry.Control.Member.MsgRegisterRequest.username)
}
#endif
inline void MsgRegisterRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cry.Control.Member.MsgRegisterRequest.username)
}
inline void MsgRegisterRequest::set_username(const void* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cry.Control.Member.MsgRegisterRequest.username)
}
inline ::std::string* MsgRegisterRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Cry.Control.Member.MsgRegisterRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRegisterRequest::release_username() {
  // @@protoc_insertion_point(field_release:Cry.Control.Member.MsgRegisterRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRegisterRequest::set_allocated_username(::std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Cry.Control.Member.MsgRegisterRequest.username)
}

// bytes password = 2;
inline void MsgRegisterRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRegisterRequest::password() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgRegisterRequest.password)
  return password_.GetNoArena();
}
inline void MsgRegisterRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgRegisterRequest.password)
}
#if LANG_CXX11
inline void MsgRegisterRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Cry.Control.Member.MsgRegisterRequest.password)
}
#endif
inline void MsgRegisterRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cry.Control.Member.MsgRegisterRequest.password)
}
inline void MsgRegisterRequest::set_password(const void* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cry.Control.Member.MsgRegisterRequest.password)
}
inline ::std::string* MsgRegisterRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:Cry.Control.Member.MsgRegisterRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRegisterRequest::release_password() {
  // @@protoc_insertion_point(field_release:Cry.Control.Member.MsgRegisterRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRegisterRequest::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:Cry.Control.Member.MsgRegisterRequest.password)
}

// bytes email = 3;
inline void MsgRegisterRequest::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRegisterRequest::email() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgRegisterRequest.email)
  return email_.GetNoArena();
}
inline void MsgRegisterRequest::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgRegisterRequest.email)
}
#if LANG_CXX11
inline void MsgRegisterRequest::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Cry.Control.Member.MsgRegisterRequest.email)
}
#endif
inline void MsgRegisterRequest::set_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cry.Control.Member.MsgRegisterRequest.email)
}
inline void MsgRegisterRequest::set_email(const void* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cry.Control.Member.MsgRegisterRequest.email)
}
inline ::std::string* MsgRegisterRequest::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:Cry.Control.Member.MsgRegisterRequest.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRegisterRequest::release_email() {
  // @@protoc_insertion_point(field_release:Cry.Control.Member.MsgRegisterRequest.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRegisterRequest::set_allocated_email(::std::string* email) {
  if (email != nullptr) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:Cry.Control.Member.MsgRegisterRequest.email)
}

// bytes phone = 4;
inline void MsgRegisterRequest::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRegisterRequest::phone() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgRegisterRequest.phone)
  return phone_.GetNoArena();
}
inline void MsgRegisterRequest::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgRegisterRequest.phone)
}
#if LANG_CXX11
inline void MsgRegisterRequest::set_phone(::std::string&& value) {
  
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Cry.Control.Member.MsgRegisterRequest.phone)
}
#endif
inline void MsgRegisterRequest::set_phone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cry.Control.Member.MsgRegisterRequest.phone)
}
inline void MsgRegisterRequest::set_phone(const void* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cry.Control.Member.MsgRegisterRequest.phone)
}
inline ::std::string* MsgRegisterRequest::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:Cry.Control.Member.MsgRegisterRequest.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRegisterRequest::release_phone() {
  // @@protoc_insertion_point(field_release:Cry.Control.Member.MsgRegisterRequest.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRegisterRequest::set_allocated_phone(::std::string* phone) {
  if (phone != nullptr) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:Cry.Control.Member.MsgRegisterRequest.phone)
}

// uint32 pin = 5;
inline void MsgRegisterRequest::clear_pin() {
  pin_ = 0u;
}
inline ::google::protobuf::uint32 MsgRegisterRequest::pin() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgRegisterRequest.pin)
  return pin_;
}
inline void MsgRegisterRequest::set_pin(::google::protobuf::uint32 value) {
  
  pin_ = value;
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgRegisterRequest.pin)
}

// -------------------------------------------------------------------

// MsgRegisterResponse

// .Cry.Control.Define.Write msg = 1;
inline void MsgRegisterResponse::clear_msg() {
  msg_ = 0;
}
inline ::Cry::Control::Define::Write MsgRegisterResponse::msg() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgRegisterResponse.msg)
  return static_cast< ::Cry::Control::Define::Write >(msg_);
}
inline void MsgRegisterResponse::set_msg(::Cry::Control::Define::Write value) {
  
  msg_ = value;
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgRegisterResponse.msg)
}

// bytes text = 2;
inline void MsgRegisterResponse::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRegisterResponse::text() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgRegisterResponse.text)
  return text_.GetNoArena();
}
inline void MsgRegisterResponse::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgRegisterResponse.text)
}
#if LANG_CXX11
inline void MsgRegisterResponse::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Cry.Control.Member.MsgRegisterResponse.text)
}
#endif
inline void MsgRegisterResponse::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cry.Control.Member.MsgRegisterResponse.text)
}
inline void MsgRegisterResponse::set_text(const void* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cry.Control.Member.MsgRegisterResponse.text)
}
inline ::std::string* MsgRegisterResponse::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:Cry.Control.Member.MsgRegisterResponse.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRegisterResponse::release_text() {
  // @@protoc_insertion_point(field_release:Cry.Control.Member.MsgRegisterResponse.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRegisterResponse::set_allocated_text(::std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:Cry.Control.Member.MsgRegisterResponse.text)
}

// uint32 uid = 3;
inline void MsgRegisterResponse::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 MsgRegisterResponse::uid() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgRegisterResponse.uid)
  return uid_;
}
inline void MsgRegisterResponse::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgRegisterResponse.uid)
}

// -------------------------------------------------------------------

// MsgSignInRequest

// bytes username = 1;
inline void MsgSignInRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSignInRequest::username() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgSignInRequest.username)
  return username_.GetNoArena();
}
inline void MsgSignInRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgSignInRequest.username)
}
#if LANG_CXX11
inline void MsgSignInRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Cry.Control.Member.MsgSignInRequest.username)
}
#endif
inline void MsgSignInRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cry.Control.Member.MsgSignInRequest.username)
}
inline void MsgSignInRequest::set_username(const void* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cry.Control.Member.MsgSignInRequest.username)
}
inline ::std::string* MsgSignInRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Cry.Control.Member.MsgSignInRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSignInRequest::release_username() {
  // @@protoc_insertion_point(field_release:Cry.Control.Member.MsgSignInRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSignInRequest::set_allocated_username(::std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Cry.Control.Member.MsgSignInRequest.username)
}

// bytes password = 2;
inline void MsgSignInRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSignInRequest::password() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgSignInRequest.password)
  return password_.GetNoArena();
}
inline void MsgSignInRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgSignInRequest.password)
}
#if LANG_CXX11
inline void MsgSignInRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Cry.Control.Member.MsgSignInRequest.password)
}
#endif
inline void MsgSignInRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cry.Control.Member.MsgSignInRequest.password)
}
inline void MsgSignInRequest::set_password(const void* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cry.Control.Member.MsgSignInRequest.password)
}
inline ::std::string* MsgSignInRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:Cry.Control.Member.MsgSignInRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSignInRequest::release_password() {
  // @@protoc_insertion_point(field_release:Cry.Control.Member.MsgSignInRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSignInRequest::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:Cry.Control.Member.MsgSignInRequest.password)
}

// uint32 version = 3;
inline void MsgSignInRequest::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 MsgSignInRequest::version() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgSignInRequest.version)
  return version_;
}
inline void MsgSignInRequest::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgSignInRequest.version)
}

// -------------------------------------------------------------------

// MsgSignInResponse

// .Cry.Control.Define.SignIn msg = 1;
inline void MsgSignInResponse::clear_msg() {
  msg_ = 0;
}
inline ::Cry::Control::Define::SignIn MsgSignInResponse::msg() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgSignInResponse.msg)
  return static_cast< ::Cry::Control::Define::SignIn >(msg_);
}
inline void MsgSignInResponse::set_msg(::Cry::Control::Define::SignIn value) {
  
  msg_ = value;
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgSignInResponse.msg)
}

// bytes text = 2;
inline void MsgSignInResponse::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSignInResponse::text() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgSignInResponse.text)
  return text_.GetNoArena();
}
inline void MsgSignInResponse::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgSignInResponse.text)
}
#if LANG_CXX11
inline void MsgSignInResponse::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Cry.Control.Member.MsgSignInResponse.text)
}
#endif
inline void MsgSignInResponse::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cry.Control.Member.MsgSignInResponse.text)
}
inline void MsgSignInResponse::set_text(const void* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cry.Control.Member.MsgSignInResponse.text)
}
inline ::std::string* MsgSignInResponse::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:Cry.Control.Member.MsgSignInResponse.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSignInResponse::release_text() {
  // @@protoc_insertion_point(field_release:Cry.Control.Member.MsgSignInResponse.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSignInResponse::set_allocated_text(::std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:Cry.Control.Member.MsgSignInResponse.text)
}

// uint32 uid = 3;
inline void MsgSignInResponse::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 MsgSignInResponse::uid() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgSignInResponse.uid)
  return uid_;
}
inline void MsgSignInResponse::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgSignInResponse.uid)
}

// uint32 expires = 4;
inline void MsgSignInResponse::clear_expires() {
  expires_ = 0u;
}
inline ::google::protobuf::uint32 MsgSignInResponse::expires() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgSignInResponse.expires)
  return expires_;
}
inline void MsgSignInResponse::set_expires(::google::protobuf::uint32 value) {
  
  expires_ = value;
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgSignInResponse.expires)
}

// -------------------------------------------------------------------

// MsgChangePassRequest

// bytes username = 1;
inline void MsgChangePassRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgChangePassRequest::username() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgChangePassRequest.username)
  return username_.GetNoArena();
}
inline void MsgChangePassRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgChangePassRequest.username)
}
#if LANG_CXX11
inline void MsgChangePassRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Cry.Control.Member.MsgChangePassRequest.username)
}
#endif
inline void MsgChangePassRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cry.Control.Member.MsgChangePassRequest.username)
}
inline void MsgChangePassRequest::set_username(const void* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cry.Control.Member.MsgChangePassRequest.username)
}
inline ::std::string* MsgChangePassRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Cry.Control.Member.MsgChangePassRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgChangePassRequest::release_username() {
  // @@protoc_insertion_point(field_release:Cry.Control.Member.MsgChangePassRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgChangePassRequest::set_allocated_username(::std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Cry.Control.Member.MsgChangePassRequest.username)
}

// bytes password = 2;
inline void MsgChangePassRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgChangePassRequest::password() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgChangePassRequest.password)
  return password_.GetNoArena();
}
inline void MsgChangePassRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgChangePassRequest.password)
}
#if LANG_CXX11
inline void MsgChangePassRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Cry.Control.Member.MsgChangePassRequest.password)
}
#endif
inline void MsgChangePassRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cry.Control.Member.MsgChangePassRequest.password)
}
inline void MsgChangePassRequest::set_password(const void* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cry.Control.Member.MsgChangePassRequest.password)
}
inline ::std::string* MsgChangePassRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:Cry.Control.Member.MsgChangePassRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgChangePassRequest::release_password() {
  // @@protoc_insertion_point(field_release:Cry.Control.Member.MsgChangePassRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgChangePassRequest::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:Cry.Control.Member.MsgChangePassRequest.password)
}

// bytes newspass = 3;
inline void MsgChangePassRequest::clear_newspass() {
  newspass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgChangePassRequest::newspass() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgChangePassRequest.newspass)
  return newspass_.GetNoArena();
}
inline void MsgChangePassRequest::set_newspass(const ::std::string& value) {
  
  newspass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgChangePassRequest.newspass)
}
#if LANG_CXX11
inline void MsgChangePassRequest::set_newspass(::std::string&& value) {
  
  newspass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Cry.Control.Member.MsgChangePassRequest.newspass)
}
#endif
inline void MsgChangePassRequest::set_newspass(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  newspass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cry.Control.Member.MsgChangePassRequest.newspass)
}
inline void MsgChangePassRequest::set_newspass(const void* value, size_t size) {
  
  newspass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cry.Control.Member.MsgChangePassRequest.newspass)
}
inline ::std::string* MsgChangePassRequest::mutable_newspass() {
  
  // @@protoc_insertion_point(field_mutable:Cry.Control.Member.MsgChangePassRequest.newspass)
  return newspass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgChangePassRequest::release_newspass() {
  // @@protoc_insertion_point(field_release:Cry.Control.Member.MsgChangePassRequest.newspass)
  
  return newspass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgChangePassRequest::set_allocated_newspass(::std::string* newspass) {
  if (newspass != nullptr) {
    
  } else {
    
  }
  newspass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newspass);
  // @@protoc_insertion_point(field_set_allocated:Cry.Control.Member.MsgChangePassRequest.newspass)
}

// uint32 pin = 4;
inline void MsgChangePassRequest::clear_pin() {
  pin_ = 0u;
}
inline ::google::protobuf::uint32 MsgChangePassRequest::pin() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgChangePassRequest.pin)
  return pin_;
}
inline void MsgChangePassRequest::set_pin(::google::protobuf::uint32 value) {
  
  pin_ = value;
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgChangePassRequest.pin)
}

// -------------------------------------------------------------------

// MsgChangePassResponse

// .Cry.Control.Define.ChangePass msg = 1;
inline void MsgChangePassResponse::clear_msg() {
  msg_ = 0;
}
inline ::Cry::Control::Define::ChangePass MsgChangePassResponse::msg() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgChangePassResponse.msg)
  return static_cast< ::Cry::Control::Define::ChangePass >(msg_);
}
inline void MsgChangePassResponse::set_msg(::Cry::Control::Define::ChangePass value) {
  
  msg_ = value;
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgChangePassResponse.msg)
}

// bytes text = 2;
inline void MsgChangePassResponse::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgChangePassResponse::text() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgChangePassResponse.text)
  return text_.GetNoArena();
}
inline void MsgChangePassResponse::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgChangePassResponse.text)
}
#if LANG_CXX11
inline void MsgChangePassResponse::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Cry.Control.Member.MsgChangePassResponse.text)
}
#endif
inline void MsgChangePassResponse::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cry.Control.Member.MsgChangePassResponse.text)
}
inline void MsgChangePassResponse::set_text(const void* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cry.Control.Member.MsgChangePassResponse.text)
}
inline ::std::string* MsgChangePassResponse::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:Cry.Control.Member.MsgChangePassResponse.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgChangePassResponse::release_text() {
  // @@protoc_insertion_point(field_release:Cry.Control.Member.MsgChangePassResponse.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgChangePassResponse::set_allocated_text(::std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:Cry.Control.Member.MsgChangePassResponse.text)
}

// uint32 uid = 3;
inline void MsgChangePassResponse::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 MsgChangePassResponse::uid() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgChangePassResponse.uid)
  return uid_;
}
inline void MsgChangePassResponse::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgChangePassResponse.uid)
}

// -------------------------------------------------------------------

// MsgChangeBindRequest

// bytes username = 1;
inline void MsgChangeBindRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgChangeBindRequest::username() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgChangeBindRequest.username)
  return username_.GetNoArena();
}
inline void MsgChangeBindRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgChangeBindRequest.username)
}
#if LANG_CXX11
inline void MsgChangeBindRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Cry.Control.Member.MsgChangeBindRequest.username)
}
#endif
inline void MsgChangeBindRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cry.Control.Member.MsgChangeBindRequest.username)
}
inline void MsgChangeBindRequest::set_username(const void* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cry.Control.Member.MsgChangeBindRequest.username)
}
inline ::std::string* MsgChangeBindRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Cry.Control.Member.MsgChangeBindRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgChangeBindRequest::release_username() {
  // @@protoc_insertion_point(field_release:Cry.Control.Member.MsgChangeBindRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgChangeBindRequest::set_allocated_username(::std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Cry.Control.Member.MsgChangeBindRequest.username)
}

// bytes password = 2;
inline void MsgChangeBindRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgChangeBindRequest::password() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgChangeBindRequest.password)
  return password_.GetNoArena();
}
inline void MsgChangeBindRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgChangeBindRequest.password)
}
#if LANG_CXX11
inline void MsgChangeBindRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Cry.Control.Member.MsgChangeBindRequest.password)
}
#endif
inline void MsgChangeBindRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cry.Control.Member.MsgChangeBindRequest.password)
}
inline void MsgChangeBindRequest::set_password(const void* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cry.Control.Member.MsgChangeBindRequest.password)
}
inline ::std::string* MsgChangeBindRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:Cry.Control.Member.MsgChangeBindRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgChangeBindRequest::release_password() {
  // @@protoc_insertion_point(field_release:Cry.Control.Member.MsgChangeBindRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgChangeBindRequest::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:Cry.Control.Member.MsgChangeBindRequest.password)
}

// uint32 secret = 3;
inline void MsgChangeBindRequest::clear_secret() {
  secret_ = 0u;
}
inline ::google::protobuf::uint32 MsgChangeBindRequest::secret() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgChangeBindRequest.secret)
  return secret_;
}
inline void MsgChangeBindRequest::set_secret(::google::protobuf::uint32 value) {
  
  secret_ = value;
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgChangeBindRequest.secret)
}

// -------------------------------------------------------------------

// MsgChangeBindResponse

// .Cry.Control.Define.ChangeBind msg = 1;
inline void MsgChangeBindResponse::clear_msg() {
  msg_ = 0;
}
inline ::Cry::Control::Define::ChangeBind MsgChangeBindResponse::msg() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgChangeBindResponse.msg)
  return static_cast< ::Cry::Control::Define::ChangeBind >(msg_);
}
inline void MsgChangeBindResponse::set_msg(::Cry::Control::Define::ChangeBind value) {
  
  msg_ = value;
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgChangeBindResponse.msg)
}

// bytes text = 2;
inline void MsgChangeBindResponse::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgChangeBindResponse::text() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgChangeBindResponse.text)
  return text_.GetNoArena();
}
inline void MsgChangeBindResponse::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgChangeBindResponse.text)
}
#if LANG_CXX11
inline void MsgChangeBindResponse::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Cry.Control.Member.MsgChangeBindResponse.text)
}
#endif
inline void MsgChangeBindResponse::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cry.Control.Member.MsgChangeBindResponse.text)
}
inline void MsgChangeBindResponse::set_text(const void* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cry.Control.Member.MsgChangeBindResponse.text)
}
inline ::std::string* MsgChangeBindResponse::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:Cry.Control.Member.MsgChangeBindResponse.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgChangeBindResponse::release_text() {
  // @@protoc_insertion_point(field_release:Cry.Control.Member.MsgChangeBindResponse.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgChangeBindResponse::set_allocated_text(::std::string* text) {
  if (text != nullptr) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:Cry.Control.Member.MsgChangeBindResponse.text)
}

// uint32 uid = 3;
inline void MsgChangeBindResponse::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 MsgChangeBindResponse::uid() const {
  // @@protoc_insertion_point(field_get:Cry.Control.Member.MsgChangeBindResponse.uid)
  return uid_;
}
inline void MsgChangeBindResponse::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:Cry.Control.Member.MsgChangeBindResponse.uid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Member
}  // namespace Control
}  // namespace Cry

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_Msg_2eControl_2eMember_2eproto
